{"version":3,"sources":["store/reducers/app.tsx","store/reducers/articles.tsx","store/reducers/index.tsx","store/store.ts","store/actions/index.tsx","shared/components/FontIcon.tsx","App/ArticlesList/ArticleItemList/ArticleModal.tsx","App/ArticlesList/ArticleItemList.tsx","App/ArticlesList/TableFooter.tsx","App/ArticlesList.tsx","shared/components/Modal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initState","modal","active","app","state","action","type","payload","search","articles","RootReducer","combineReducers","App","Articles","store","createStore","composeWithDevTools","dispatch","closeModal","FontIcon","name","className","props","ArticleModal","article","webTitle","sectionName","Date","webPublicationDate","toLocaleString","day","month","year","pillarName","href","webUrl","target","ArticleItemList","key","id","onClick","title","size","content","e","stopPropagation","TableFooter","totalElements","onChangePage","currentPage","pages","previousLabel","nextLabel","breakLabel","forcePage","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","guardian","Guardian","ArticlesList","useSelector","results","total","fetch","page","a","body","JSON","parse","response","useEffect","map","item","selected","Modal","ReactModal","setAppElement","isOpen","portalClassName","onRequestClose","closeTimeoutMS","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0qBAAMA,EAAY,CAChBC,MAAO,CACLC,QAAQ,IA2BGC,EAvBH,WAA0C,IAAzCC,EAAwC,uDAA3BJ,EAAWK,EAAgB,uCACnD,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEH,MAAM,2BACDI,EAAOE,SADP,IAEHL,QAAQ,MAGd,IAAK,cACH,OAAO,2BACFE,GADL,IAEEH,MAAM,2BACDG,EAAMH,OADN,IAEHC,QAAQ,MAGd,QACE,OAAOE,ICzBPJ,EAAY,CAChBQ,OAAQ,IAeKC,EAZE,WAA0C,IAAzCL,EAAwC,uDAA3BJ,EAAWK,EAAgB,uCACxD,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEI,OAAQH,EAAOE,UAEnB,QACE,OAAOH,ICHEM,EALKC,0BAAgB,CAClCR,IAAKS,EACLH,SAAUI,ICFCC,EAAQC,sBAAYL,EAAaM,iCCFxCC,EAAW,SAACV,GAAD,OAAkBO,EAAMG,SAASV,IAuBrCW,EAAa,WACxB,OAAOD,EAAS,CACdX,KAAM,iB,kDCCK,SAASa,EAAT,GAAyD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAcC,EAAgB,iBACrE,OAAO,wCAAMD,UAAS,oBAAeD,EAAf,YAAuBC,IAAiBC,I,cCxBjD,SAASC,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,QACrC,OACE,yBAAKH,UAAU,iBACb,yBAAKA,UAAU,SAASG,EAAQC,UAChC,yBAAKJ,UAAU,gBACb,6BACE,4CACCG,EAAQE,aAEX,yBAAKL,UAAU,SACb,oDAAgC,IAC/B,IAAIM,KAAKH,EAAQI,oBAAoBC,eAAe,QAAS,CAC5DC,IAAK,UACLC,MAAO,QACPC,KAAM,aAGV,6BACE,yCACCR,EAAQS,YAGX,yBAAKZ,UAAU,SACb,uBAAGA,UAAU,SAASa,KAAMV,EAAQW,OAAQC,OAAO,UAAnD,kBCpBK,SAASC,EAAT,GAA8C,IAAnBb,EAAkB,EAAlBA,QAaxC,OACE,wBAAIH,UAAU,oBAAoBiB,IAAKd,EAAQe,GAAIC,QAbjC,WHUbvB,EAAS,CACdX,KAAM,aACNC,QGXU,CACRkC,MAAO,UACPC,KAAM,OACNC,QAAS,kBAAC,EAAD,CAAcnB,QAASA,SAUhC,4BAAKA,EAAQC,UACb,4BAAKD,EAAQE,aACb,4BAAKF,EAAQS,YACb,4BACE,uBAAGC,KAAMV,EAAQW,OAAQK,QAVP,SAACI,GACvBA,EAAEC,mBASqDT,OAAO,UACxD,kBAAC,EAAD,CAAUhB,KAAK,qB,6BCjBV,SAAS0B,EAAT,GAKJ,IAJTC,EAIQ,EAJRA,cACAC,EAGQ,EAHRA,aACAC,EAEQ,EAFRA,YACAC,EACQ,EADRA,MAEA,OACE,yBAAK7B,UAAU,gBACb,6BAAM0B,EAAN,aACA,6BACE,kBAAC,IAAD,CACEI,cAAe,kBAAC,EAAD,CAAU/B,KAAK,eAC9BgC,UAAW,kBAAC,EAAD,CAAUhC,KAAK,gBAC1BiC,WAAY,MACZC,UAAWL,EAAc,EACzBM,eAAgB,WAChBC,UAAWN,EACXO,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcX,EACdY,mBAAoB,aACpBC,gBAAiB,aCvB3B,IAAMC,EAAW,IAAIC,IAAS,wCAAwC,GAGvD,SAASC,EAAT,GAAkC,eAC/C,MAA+CC,aAC7C,SAAC7D,GAAD,OAAkBA,EAAMK,SAASD,UAD3ByC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,MAAOgB,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,MAI/BC,EAAK,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACYR,EAASnB,QAAQnC,OAAO,KAAM,CACpD6D,KAAMA,EAAOA,EAAO,EAAI,IAFd,gBACJE,EADI,EACJA,KADI,EAISC,KAAKC,MAAMF,GAAxBG,EAJI,EAIJA,SLhBHzD,EAAS,CACdX,KAAM,aACNC,QKeUmE,IALE,2CAAH,sDAOXC,qBAAU,WACRP,MACC,IAMH,OACE,yBAAK/C,UAAU,iBACb,+BACE,+BACE,4BACE,qCACA,uCACA,oCACA,sCAGJ,sCACG6C,QADH,IACGA,OADH,EACGA,EAASU,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAAiBvC,IAAKuC,EAAKtC,GAAIf,QAASqD,SAI9C,kBAAC,EAAD,CACE5B,YAAaA,EACbD,aAvBe,SAAC,GAAwC,IAAtC8B,EAAqC,EAArCA,SACtBV,EAAMU,IAuBF/B,cAAeoB,EACfjB,MAAOA,K,6BC7CA,SAAS6B,IACtB,IAAM9E,EAAQgE,aAAY,SAAC7D,GAAD,OAAkBA,EAAMD,IAAIF,SAKtD,OAJA0E,qBAAU,WACRK,IAAWC,cAAc,WACxB,IAGD,kBAAC,IAAD,CACEC,OAAQjF,EAAMC,OACdmB,UAAS,gBAAWpB,EAAMyC,MAC1ByC,gBAAgB,mBAChBC,eAAgBlE,EAChBmE,eAAgB,KAEfpF,EAAMwC,OACL,yBAAKpB,UAAU,eACb,8BACCpB,EAAMwC,MACP,yBAAKpB,UAAU,gBACb,kBAAC,EAAD,CAAUD,KAAK,QAAQoB,QAAStB,MAItC,yBAAKG,UAAU,iBAAiBpB,EAAM0C,UCb7B/B,MAbf,WACE,OACE,yBAAKS,UAAU,OACb,kBAAC,EAAD,MACA,4CACA,yBAAKA,UAAU,eAAf,kEAGA,kBAAC,EAAD,Q,OCDciE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAU9E,MAAOA,GACf,kBAAC,IAAM+E,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.19761b0a.chunk.js","sourcesContent":["const initState = {\n  modal: {\n    active: false,\n  },\n};\n\nconst app = (state: any = initState, action: any) => {\n  switch (action.type) {\n    case \"OPEN_MODAL\":\n      return {\n        ...state,\n        modal: {\n          ...action.payload,\n          active: true,\n        },\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          active: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","const initState = {\n  search: {},\n};\n\nconst articles = (state: any = initState, action: any) => {\n  switch (action.type) {\n    case \"GET_SEARCH\":\n      return {\n        ...state,\n        search: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default articles;\n","import { combineReducers } from \"redux\";\nimport App from \"./app\";\nimport Articles from \"./articles\";\n\nconst RootReducer = combineReducers({\n  app: App,\n  articles: Articles,\n});\n\nexport default RootReducer;\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport RootReducer from \"./reducers\";\r\n\r\nexport const store = createStore(RootReducer, composeWithDevTools());\r\n","import { store } from \"../store\";\n\nconst dispatch = (payload: any) => store.dispatch(payload);\n\nexport const getSearch = (data: any) => {\n  return dispatch({\n    type: \"GET_SEARCH\",\n    payload: data,\n  });\n};\n\ntype ModalOptions = {\n  title?: string;\n  size?: \"small\" | \"medium\" | \"full\";\n  content: any;\n  className?: string;\n};\n\nexport const openModal = (data: ModalOptions) => {\n  return dispatch({\n    type: \"OPEN_MODAL\",\n    payload: data,\n  });\n};\n\nexport const closeModal = () => {\n  return dispatch({\n    type: \"CLOSE_MODAL\",\n  });\n};\n","import React from \"react\";\r\nimport \"./FontIcon.scss\";\r\n\r\ntype Props = React.DetailedHTMLProps<\r\n  React.HTMLAttributes<HTMLSpanElement>,\r\n  HTMLSpanElement\r\n> & {\r\n  name:\r\n    | \"close\"\r\n    | \"arrow-down\"\r\n    | \"pencil\"\r\n    | \"filter\"\r\n    | \"cart\"\r\n    | \"three-dots\"\r\n    | \"plus\"\r\n    | \"alert\"\r\n    | \"facebook\"\r\n    | \"search\"\r\n    | \"linkedin\"\r\n    | \"phone\"\r\n    | \"menu\"\r\n    | \"arrow\"\r\n    | \"at\"\r\n    | \"business\"\r\n    | \"external-link\"\r\n    | \"arrow-left\"\r\n    | \"arrow-right\";\r\n};\r\nexport default function FontIcon({ name, className, ...props }: Props) {\r\n  return <span className={`icon icon-${name} ${className}`} {...props}></span>;\r\n}\r\n","import React from \"react\";\r\nimport { Article } from \"../../../shared/types/article\";\r\nimport \"./ArticleModal.scss\";\r\n\r\ntype Props = { article: Article };\r\nexport default function ArticleModal({ article }: Props) {\r\n  return (\r\n    <div className=\"article-modal\">\r\n      <div className=\"title\">{article.webTitle}</div>\r\n      <div className=\"info-wrapper\">\r\n        <div>\r\n          <span> Section :</span>\r\n          {article.sectionName}\r\n        </div>\r\n        <div className=\"right\">\r\n          <span>Publication date :</span>{\" \"}\r\n          {new Date(article.webPublicationDate).toLocaleString(\"en-GB\", {\r\n            day: \"numeric\",\r\n            month: \"short\",\r\n            year: \"numeric\",\r\n          })}\r\n        </div>\r\n        <div>\r\n          <span>Type : </span>\r\n          {article.pillarName}\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n          <a className=\"button\" href={article.webUrl} target=\"_blank\">\r\n            See article\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FontIcon from \"../../shared/components/FontIcon\";\r\nimport { Article } from \"../../shared/types/article\";\r\nimport { openModal } from \"../../store/actions\";\r\nimport \"./ArticleItemList.scss\";\r\nimport ArticleModal from \"./ArticleItemList/ArticleModal\";\r\n\r\ntype Props = { article: Article };\r\nexport default function ArticleItemList({ article }: Props) {\r\n  const openArticle = () => {\r\n    openModal({\r\n      title: \"Article\",\r\n      size: \"full\",\r\n      content: <ArticleModal article={article} />,\r\n    });\r\n  };\r\n\r\n  const stopPropagation = (e: any) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <tr className=\"article-item-list\" key={article.id} onClick={openArticle}>\r\n      <td>{article.webTitle}</td>\r\n      <td>{article.sectionName}</td>\r\n      <td>{article.pillarName}</td>\r\n      <td>\r\n        <a href={article.webUrl} onClick={stopPropagation} target=\"_blank\">\r\n          <FontIcon name=\"external-link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport FontIcon from \"../../shared/components/FontIcon\";\r\nimport \"./TableFooter.scss\";\r\n\r\ntype Props = {\r\n  totalElements: number;\r\n  currentPage: number;\r\n  onChangePage: (obj: any) => void;\r\n  pages: number;\r\n};\r\nexport default function TableFooter({\r\n  totalElements,\r\n  onChangePage,\r\n  currentPage,\r\n  pages,\r\n}: Props) {\r\n  return (\r\n    <div className=\"table-footer\">\r\n      <div>{totalElements} elements</div>\r\n      <div>\r\n        <ReactPaginate\r\n          previousLabel={<FontIcon name=\"arrow-left\" />}\r\n          nextLabel={<FontIcon name=\"arrow-right\" />}\r\n          breakLabel={\"...\"}\r\n          forcePage={currentPage - 1}\r\n          breakClassName={\"break-me\"}\r\n          pageCount={pages}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onChangePage}\r\n          containerClassName={\"pagination\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Guardian from \"guardian-js\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Store } from \"../shared/types/store\";\r\nimport { getSearch } from \"../store/actions\";\r\nimport \"./ArticlesList.scss\";\r\nimport ArticleItemList from \"./ArticlesList/ArticleItemList\";\r\nimport TableFooter from \"./ArticlesList/TableFooter\";\r\n\r\nconst guardian = new Guardian(\"e3b4abec-95cf-4732-a2b1-63aa6b35f080\", false);\r\n\r\ntype Props = {};\r\nexport default function ArticlesList({}: Props) {\r\n  const { currentPage, pages, results, total } = useSelector(\r\n    (state: Store) => state.articles.search\r\n  );\r\n\r\n  const fetch = async (page?: number) => {\r\n    const { body } = (await guardian.content.search(\"it\", {\r\n      page: page ? page + 1 : 1,\r\n    })) as any;\r\n    const { response } = JSON.parse(body);\r\n    getSearch(response);\r\n  };\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n\r\n  const onChangePage = ({ selected }: { selected: number }) => {\r\n    fetch(selected);\r\n  };\r\n\r\n  return (\r\n    <div className=\"articles-list\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Section</th>\r\n            <th>Type</th>\r\n            <th>Link</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {results?.map((item: any) => (\r\n            <ArticleItemList key={item.id} article={item} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <TableFooter\r\n        currentPage={currentPage}\r\n        onChangePage={onChangePage}\r\n        totalElements={total}\r\n        pages={pages}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { closeModal } from \"../../store/actions\";\r\nimport { Store } from \"../types/store\";\r\nimport FontIcon from \"./FontIcon\";\r\nimport \"./Modal.scss\";\r\n\r\nexport default function Modal() {\r\n  const modal = useSelector((state: Store) => state.app.modal);\r\n  useEffect(() => {\r\n    ReactModal.setAppElement(\"#root\");\r\n  }, []);\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={modal.active}\r\n      className={`Modal ${modal.size}`}\r\n      portalClassName=\"ReactModalPortal\"\r\n      onRequestClose={closeModal}\r\n      closeTimeoutMS={300}\r\n    >\r\n      {modal.title && (\r\n        <div className=\"modal-title\">\r\n          <div></div>\r\n          {modal.title}\r\n          <div className=\"close-button\">\r\n            <FontIcon name=\"close\" onClick={closeModal} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"modal-content\">{modal.content}</div>\r\n    </ReactModal>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport ArticlesList from \"./App/ArticlesList\";\nimport Modal from \"./shared/components/Modal\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Modal />\n      <h1>The Guardian</h1>\n      <div className=\"description\">\n        You can see below the articles from the website : The Guardian\n      </div>\n      <ArticlesList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}